name: 'Terraform Apply'

on: [workflow_dispatch]

permissions: write-all

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: production

    environment: ${{ matrix.environment }}

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}

    - name: Set Account ID
      id: account
      run: |
        echo "::set-output name=ACCOUNT_ID::$(aws sts get-caller-identity --query Account --output text)"

    - name: Check previous AWSGoat Deployment
      id: check 
      run: |
        echo $ACCOUNT_ID
        aws s3api head-object --bucket do-not-delete-awsgoat-state-files-${{ steps.account.outputs.ACCOUNT_ID }} --key terraform.tfstate
      continue-on-error: true

    - name: Exit if previous deployment exists
      if: steps.check.outcome == 'success' 
      run: |
        echo "A Previous AWSGoat deployment exists, run the Terraform Destroy Action"
        exit 1

    # Initialize a new or existing Terraform working directory 
    - name: Terraform Init
      run: | 
        terraform init 
        ls -al
        
    # Installs boto3
    - uses: actions/setup-python@v2
      with:
        python-version: 3
    - name: install
      run: |
        pip install boto3
    
    - name: Terraform Plan
      id: plan 
      run: | 
        terraform plan -input=false
        ls -al
      continue-on-error: false
      
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    
    - name: Terraform Apply
      run: | 
        terraform apply -auto-approve -input=false
        ls -al
      continue-on-error: false

    # Copy tfstate file to s3 bucket
    - name: Copy terraform.tfstate file to s3bucket
      if: always()
      run: |
        aws s3 cp ./terraform.tfstate s3://do-not-delete-awsgoat-state-files-${{ steps.account.outputs.ACCOUNT_ID }}/terraform.tfstate 

    # Terraform Output the API Gateway url
    - name: Application URL
      run: |
        terraform output
